1.编译：

repo init -u https://source.codeaurora.org/external/imx/imx-manifest -b imx-linux-sumo -m imx-4.14.78-1.0.0_ga.xml  --repo-url=https://mirrors.tuna.tsinghua.edu.cn/git/git-repo

repo sync

DISTRO=fsl-imx-wayland MACHINE=imx8qxpmek source fsl-setup-release.sh -b imx8qxpmek_wayland

bitbake fsl-image-validation-imx
---升级到4.14.98------------------------------------------------
$ repo init -u https://source.codeaurora.org/external/imx/imx-manifest -b imx-linux-sumo -m imx-4.14.98-2.0.0_ga.xml  --repo-url=https://mirrors.tuna.tsinghua.edu.cn/git/git-repo
$ repo sync
----------------------------------------------------
2.
编译成功后的输出是：
/home/book/workstation_imx8qxp_yocto/imx8qxp_yocto/imx-yocto-bsp/imx8qxpmek_wayland/tmp/deploy/images/imx8qxpmek/目录下：
    fsl-image-validation-imx-imx8qxpmek.sdcard.bz2
        -> fsl-image-validation-imx-imx8qxpmek-20190114071748.rootfs.sdcard.bz2
    (sdcard镜像，解压后可以直接烧写)

    fsl-image-validation-imx-imx8qxpmek.tar.bz2
        -> fsl-image-validation-imx-imx8qxpmek-20190114071748.rootfs.tar.bz2 (rootfs压缩包)

    u-boot-sd-2018.03-r0.bin  (uboot)
    imx-boot-tools/ mx8qx-mek-scfw-tcm.bin (sc firmware)
    imx-boot-tools/ bl31-imx8qxp.bin  (ATF)
    imx-boot-tools/mx8qx-ahab-container.img (seco HAB container仅有镜像)

3.
烧写SD卡镜像 
    bunzip2 -dk -f  fsl-image-validation-imx-imx8qxpmek-20190114071748.rootfs.sdcard.bz2
    sudo dd if=fsl-image-validation-imx-imx8qxpmek-20190114071748.rootfs.sdcard of=/dev/sd<partition> bs=1M conv=fsync

4.之后
  编译sdk及安装
  
    bitbake fsl-image-validation-imx -c populate_sdk

  在/home/book/workstation_imx8qxp_yocto/imx8qxp_yocto/imx-yocto-bsp/imx8qxpmek_wayland/tmp/deploy/sdk/目录下：
    fsl-imx-wayland-glibc-x86_64-fsl-image-validation-imx-aarch64-toolchain-4.14-sumo.sh

运行安装这条脚本：
  cd /home/book/workstation_imx8qxp_yocto/imx8qxp_yocto/imx-yocto-bsp/imx8qxpmek_wayland/
  mkdir sdk
  
  cd /home/book/workstation_imx8qxp_yocto/imx8qxp_yocto/imx-yocto-bsp/imx8qxpmek_wayland/tmp/deploy/sdk/
  ./fsl-imx-wayland-glibc-x86_64-fsl-image-validation-imx-aarch64-toolchain-4.14-sumo.sh

输入安装sdk的目标目录(default: /opt/fsl-imx-fb/4.9.51-mx8-ga):
  ~/workstation_imx8qxp_yocto/imx8qxp_yocto/imx-yocto-bsp/imx8qxpmek_wayland/sdk
You are about to install the SDK to "~/workstation_imx8qxp_yocto/imx8qxp_yocto/imx-yocto-bsp/imx8qxpmek_wayland/sdk". Proceed[Y/n]? Y

  安装结束后，可以在以下目录找到安装的sdk及编译toolchain：
    -------------------------------------------------------------------------
    book@www.100ask.org:~/workstation_imx8qxp_yocto/imx8qxp_yocto/imx-yocto-bsp/imx8qxpmek_wayland/sdk$ ll
      total 36
      drwxr-xr-x 3 book book  4096 5月   6 13:59 ./
      drwxrwxr-x 7 book book  4096 5月   6 13:50 ../
      -rw-r--r-- 1 book book  4078 5月   6 13:55 environment-setup-aarch64-poky-linux
      -rw-r--r-- 1 book book 13970 5月   6 13:55 site-config-aarch64-poky-linux
      drwxr-xr-x 4 book book  4096 5月   6 11:25 sysroots/
      -rw-r--r-- 1 book book   136 5月   6 13:55 version-aarch64-poky-linux  
    -------------------------------------------------------------------------

5.独立编译
  编译SCfirmware
  工作目录：/home/book/workstation_imx8qxp_yocto/SCU/imx-scfw-porting-kit-1.1.1
  源码目录：/home/book/workstation_imx8qxp_yocto/SCU/imx-scfw-porting-kit-1.1.1/packages/imx-scfw-porting-kit/src/scfw_export_mx8qx_b0
  工具链：export TOOLS=/home/book/workstation_imx8qxp_yocto/SCU/imx-scfw-porting-kit-1.1.1/toolchain/

  进入源码目录，然后编译：
    make qx B=mek R=B0  (如果需要看串口调试信息就增加M=1参数，注意重新编译之前要make clean-qx一下)
	编译结束打印为：
	“
	make qx B=mek R=B0 
	Generating platform/board/mx8qx_mek/dcd/imx8qx_dcd_1.2GHz.h
	Generating platform/board/mx8qx_mek/dcd/dcd.h from platform/board/mx8qx_mek/dcd/imx8qx_dcd_1.2GHz.h
	Generating platform/board/mx8qx_mek/dcd/imx8qx_dcd_1.2GHz_retention.h
	Generating platform/board/mx8qx_mek/dcd/dcd_retention.h from platform/board/mx8qx_mek/dcd/imx8qx_dcd_1.2GHz_retention.h
	Compiling platform/drivers/pmic/fsl_pmic.c
	Compiling platform/drivers/pmic/pf8100/fsl_pf8100.c
	Compiling platform/board/mx8qx_mek/board.c
	Compiling platform/board/board_common.c
	Assembling platform/board/board.S
	Linking build_mx8qx_b0/scfw_tcm.elf ....
	Objcopy build_mx8qx_b0/scfw_tcm.bin ....
	done.”
	--------------------------------------------------imx-scfw-porting-kit-1.2----------------------------------------------------------
	源码目录：/home/book/workstation_imx8qxp_yocto/SCU/imx-scfw-porting-kit-1.2/packages/imx-scfw-porting-kit-1.2/src/scfw_export_mx8qx_b0
	工具链：  export TOOLS=/home/book/workstation_imx8qxp_yocto/SCU/imx-scfw-porting-kit-1.2/toolchain
	
	进入源码目录，然后编译：
	make qx B=mek R=B0 (如果需要看串口调试信息就增加M=1 参数，U=2 表示使用SCU 本身串口，注意重新编译之前要make clean-qx 一下)
	编译结束打印为：
	make qx B=mek R=B0 M=1 U=2 DL=3
	Generating platform/board/mx8qx_mek/dcd/imx8qx_dcd_1.2GHz.h
	Generating platform/board/mx8qx_mek/dcd/dcd.h from platform/board/mx8qx_mek/dcd/imx8qx_dcd_1.2GHz.h
	Generating platform/board/mx8qx_mek/dcd/imx8qx_dcd_1.2GHz_retention.h
	Generating platform/board/mx8qx_mek/dcd/dcd_retention.h from
	platform/board/mx8qx_mek/dcd/imx8qx_dcd_1.2GHz_retention.h
	Compiling platform/drivers/pmic/fsl_pmic.c
	Compiling platform/drivers/pmic/pf8100/fsl_pf8100.c
	Compiling platform/drivers/pmic/pf100/fsl_pf100.c
	Compiling platform/board/mx8qx_mek/board.c
	Compiling platform/board/board_common.c
	Compiling platform/board/pmic.c
	Linking build_mx8qx_b0/scfw_tcm.elf ....
	Objcopy build_mx8qx_b0/scfw_tcm.bin ....
	done.

	---------------------------------------------------------------------------------------------------------------------

如果要debug，把log level 调高一点， 至少调到 3 

    make qx B=mek R=B0 M=1 DL=3

help :
        @/bin/echo -e "Usage: make TARGET OPTIONS\n"
        @/bin/echo -e "Targets:"
        @/bin/echo -e "\thelp           : display help text"
        @/bin/echo -e "\tclean          : remove all build files\n"
        @/bin/echo -en $(HELP)
        @/bin/echo -e "\nOptions:"
        @/bin/echo -e "\tV=0            : quite output (default)"
        @/bin/echo -e "\tV=1            : verbose output"
        @/bin/echo -e "\tD=0            : configure for no debug"
        @/bin/echo -e "\tD=1            : configure for debug (default)"
        @/bin/echo -e "\tDL=<level>     : configure debug level (0-5)"
        @/bin/echo -e "\tB=<board>      : configure board (default=val)"
        @/bin/echo -e "\tDDR_CON=<file> : specify DDR config file"
        @/bin/echo -e "\tR=<srev>       : silicon revision (default=A0)"
        @/bin/echo -e "\tM=0            : no debug monitor (default)"
        @/bin/echo -e "\tM=1            : include debug monitor"
        @/bin/echo -e "\tT=<test>       : run tests rather than boot next core"
        @/bin/echo -en $(HELP_OPT)

6.独立编译
  编译uboot: 另打开一个终端
    cd ~/workstation_imx8qxp_yocto
    mkdir manual_git
    cd manual_git

    mkdir uboot
    cd uboot
    git clone  https://source.codeaurora.org/external/imx/uboot-imx
    cd uboot-imx
    git tag
      ....
    rel_imx_4.14.78_1.0.0_ga           /*2019-07-11 rel_imx_4.14.98_2.0.0_ga 命令都不变*/
      ...
    git checkout rel_imx_4.14.78_1.0.0_ga
    git status
      HEAD detached at rel_imx_4.14.78_1.0.0_ga
      nothing to commit, working directory clean

    ls configs
      …

      imx8qxp_mek_defconfig
      …
  编译命令：
    source ~/workstation_imx8qxp_yocto/imx8qxp_yocto/imx-yocto-bsp/imx8qxpmek_wayland/sdk/environment-setup-aarch64-poky-linux
    make  imx8qxp_mek_defconfig
    make 
  编译log如下：
    …
    OBJCOPY u-boot.srec
    OBJCOPY u-boot-nodtb.bin
    start=$(aarch64-poky-linux-nm u-boot | grep __rel_dyn_start | cut -f 1 -d ' '); end=$(aarch64-poky-linux-nm u-boot | grep __rel_dyn_end | cut -f 1 -d ' '); tools/relocate-rela u-boot-nodtb.bin 0x80020000 $start $end
    make[2]: `arch/arm/dts/fsl-imx8qxp-mek.dtb' is up to date.
    CAT     u-boot-dtb.bin
    COPY    u-boot.bin
    SYM     u-boot.sym
    LD      u-boot.elf
    CHK     include/config.h
    CFG     u-boot.cfg
    CFGCHK  u-boot.cfg
  编译结束后的输出镜像为： 
    u-boot.bin
    arch/arm/dts/fsl-imx8qxp-mek.dtb

7.独立编译
  编译Linux内核：
    mkdir linux_kernel
    cd linux_kernel
    git clone  https://source.codeaurora.org/external/imx/linux-imx
    cd linux-imx
    git tag
      ...
      rel_imx_4.14.78_1.0.0_ga        /*2019-07-11 rel_imx_4.14.98_2.0.0_ga 命令都不变*/
										/*2020-03-18 rel_imx4.19.35.1.1.0 下文更新*/
      ...
    git checkout rel_imx_4.14.78_1.0.0_ga
    git status
      HEAD detached at rel_imx_4.14.78_1.0.0_ga
  编译命令：
    source ~/workstation_imx8qxp_yocto/imx8qxp_yocto/imx-yocto-bsp/imx8qxpmek_wayland/sdk/environment-setup-aarch64-poky-linux
    make defconfig             #arch/arm64/configs/defconfig
    LDFLAGS=""  CC="$CC"  make
  编译结束后的输出镜像为：
    arch/arm64/boot/dts/freescale/fsl-imx8qxp-mek.dtb
    arch/arm64/boot/Image
-----------------插入dtb反汇编到dts的内容----------------------------
	source ~/workstation_imx8qxp_yocto/imx8qxp_yocto/imx-yocto-bsp/imx8qxpmek_wayland/sdk/environment-setup-aarch64-poky-linux

	cd /home/book/workstation_imx8qxp_yocto/manual_git/linux_kernel/linux-imx/arch/arm64/boot/dts/freescale/

	/home/book/workstation_imx8qxp_yocto/imx8qxp_yocto/imx-yocto-bsp/imx8qxpmek_wayland/sdk/sysroots/x86_64-pokysdk-linux/usr/bin/dtc -I dtb -O dts -o all.dts fsl-imx8qxp-mek.dtb
	//将fsl-imx8qxp-mek.dtb反汇编为all.dts
--------------------------------------------------------------------
-----------2020.03.18遗忘的知识点--------
	创建新分支：git branch branchName
	切换到新分支：git checkout branchName

	上面两个命令也可以合成为一个命令：
	git checkout -b branchName

---------------------------------------------
8.独立编译
  编译ATF:
    git clone https://source.codeaurora.org/external/imx/imx-atf
    cd imx-atf
    git tag
      ...
      rel_imx_4.14.78_1.0.0_ga          /*2019-07-11 rel_imx_4.14.98_2.0.0_ga */
      ...

    git checkout rel_imx_4.14.78_1.0.0_ga
    git status
      HEAD detached at rel_imx_4.14.78_1.0.0_ga
  编译命令：
    source ~/workstation_imx8qxp_yocto/imx8qxp_yocto/imx-yocto-bsp/imx8qxpmek_wayland/sdk/environment-setup-aarch64-poky-linux
    LDFLAGS=""  make PLAT=imx8qxp
	----------------------------------------------------------------	
	/*2019-07-11 rel_imx_4.14.98_2.0.0_ga 这里命令发生了改变。*/
	LDFLAGS=""  make PLAT=imx8qx
	在4.14.98：
	/home/book/workstation_imx8qxp_yocto/manual_git/atf/imx-atf/plat/imx/imx8qx
        在4.14.78：
        /home/book/workstation_imx8qxp_yocto/manual_git/atf/imx-atf/plat/imx/imx8qxp
	---------------------------------------------------------------
       编译log为：
        …
        LD      build/imx8qxp/release/bl31/bl31.elf
        BIN     build/imx8qxp/release/bl31.bin
        Built build/imx8qxp/release/bl31.bin successfully
   编译结束后的输出镜像为：
   ./build/imx8qxp/release/bl31.bin
	-----------------------------------------------------------------
	4.14.98 编译log为：
	...
	  AS      plat/common/aarch64/platform_helpers.S
	  PP      bl31/bl31.ld.S
	  LD      build/imx8qx/release/bl31/bl31.elf
	  BIN     build/imx8qx/release/bl31.bin

	  Built build/imx8qx/release/bl31.bin successfully
	----------------------------------------------------------------

9.运行 imx-mkimage脚本生成 flash.bin镜像:
  另打开一个终端，不要与编译uboot&kernel同用一个终端：
  git clone https://source.codeaurora.org/external/imx/imx-mkimage
  cd imx-mkimage
  git tag
    ...
    rel_imx_4.14.78_1.0.0_ga         /*2019-07-11 rel_imx_4.14.98_2.0.0_ga 命令都不变*/
    ...
  git checkout rel_imx_4.14.78_1.0.0_ga
  git status
    HEAD detached at rel_imx_4.14.78_1.0.0_ga
  imx-mkimage需要调用host PC的GCC工具，所以需要退出之前的terminal。重新进入，从而退出之前source的交叉编译变量。

  cd imx-mkimage/
  ls
  git status
  cd iMX8QX
  ls
  cp /home/book/workstation_imx8qxp_yocto/imx8qxp_yocto/imx-yocto-bsp/imx8qxpmek_wayland/tmp/deploy/images/imx8qxpmek/mx8qx-ahab-container.img .

  cp /home/book/workstation_imx8qxp_yocto/SCU/imx-scfw-porting-kit-1.1.1/packages/imx-scfw-porting-kit/src/scfw_export_mx8qx_b0/build_mx8qx_b0/scfw_tcm.bin  .
  -----------------------------------------------scfw-1.2------------------------
  cp /home/book/workstation_imx8qxp_yocto/SCU/imx-scfw-porting-kit-1.2/packages/imx-scfw-porting-kit-1.2/src/scfw_export_mx8qx_b0/build_mx8qx_b0/scfw_tcm.bin .
  ------------------------------------------------------------------------------
  cp /home/book/workstation_imx8qxp_yocto/manual_git/atf/imx-atf/build/imx8qxp/release/bl31.bin .
  cp /home/book/workstation_imx8qxp_yocto/manual_git/uboot/uboot-imx/u-boot.bin .
 
  cd ..
  make SOC=iMX8QX flash_b0
 
  cd iMX8QX
  ls


------------------------2020-03-18  rel_imx_4.19.35_1.1.0-------------
	git clone  https://source.codeaurora.org/external/imx/linux-imx
	cd linux-imx
	git tag
      ...
      rel_imx_4.19.35-1.1.0
      ...
    git checkout rel_imx_4.14.78_1.0.0_ga  (不要加-b，文档里错误)
		---------------------------
		book@AaronZeng:~/workstation_imx8qxp_yocto/manual_git/linux_kernel/linux-imx-4.19.35/linux-imx$ git branch
		* (HEAD detached at rel_imx_4.19.35_1.1.0)
		  master
		-----------------------------


$ source ~/workstation_imx8qxp_yocto/imx8qxp_yocto/imx-yocto-bsp/imx8qxpmek_wayland/sdk/environment-setup-aarch64-poky-linux

$ echo $LDFLAGS
-Wl,-O1 -Wl,--hash-style=gnu -Wl,--as-needed
$ unset LDFLAGS // Remove env variable LDFLAGS

$ echo $ARCH
arm64
$ echo $CROSS_COMPILE
aarch64-poky-linux-

编译命令：
$ make distclean 	// delete all generated files
$ make defconfig 	// configuration for i.MX 8,#arch/arm64/configs/defconfig

$ make -j $(nproc) 	// -j: number of simulatneous jobs
					// use available Host CPUs for number
					// my machine is 4

$ Linux kernel generated files in directory arch/arm64/boot 
dts
Image
Image.gz
install.sh
Makefile

